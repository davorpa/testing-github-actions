name: CI/CD. Create React App

on:
  push:
    branches:
      # matches every branch that doesn't contain a '/'
#      - '*'
      # matches every branch containing a single '/'
#      - '*/*'
      # matches every branch
      - '**'
      # excludes master
#      - '!master'
      # includes one
#      - 'create-react-app'
    paths:
      # Include this workflow
      - '.github/workflows/ci.create-react-app.yml'
      # Include target folder
      - 'create-react-app/**'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/ci.create-react-app.yml'
      - 'create-react-app/**'
  # manual dispatch
  workflow_dispatch:


jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-latest
          - windows-latest
        node_version:
          - 12.x
          - 14.x
          - 16.x
        architecture:
          - x64
        # an extra windows-x86 run:
        include:
          - os: windows-2016
            node_version: 12
            architecture: x86
    
    name: Node ${{ matrix.node_version }} ${{ matrix.architecture }} on ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version:    ${{ matrix.node_version }}
          architecture:    ${{ matrix.architecture }}
#          check-latest:    true
          # zero-config caching available using setup-node@v2
#          cache:           'npm'
        
      - name: Print node version
        run: node --version
      - name: Print npm version
        run: npm --version
      - name: Upgrade npm
        run:  npm install -g npm
      - name: Print node version
        run: node --version
      - name: Print npm version
        run: npm --version
      
      # Always after setup node/npm or use `actions/setup-node.with.cache: 'npm'`
      # verbose caching if using `actions/setup-node@v1`
      - name: Determine npm cache directory
        id:   npm-cache-dir
        run:  |
          echo "::set-output name=dir::$(npm config get cache)"
      
      - name: Print npm cache status
        env:
          NPM_CACHE_DIR: ${{ steps.npm-cache-dir.outputs.dir }}
          RUNNER_OSPLAT: ${{ runner.os }}
        if: ${{ !startsWith(runner.os, 'Windows') }}
        run: |
          echo $RUNNER_OSPLAT
          echo $NPM_CACHE_DIR
