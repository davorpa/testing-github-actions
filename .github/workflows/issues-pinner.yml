name: Issues pinner management

on:
  issues:
    types:
      - "pinned"
      - "unpinned"

permissions:
  # no checkouts needed
  contents: none
  # needed by "action-add-labels / action-remove-labels" to CRUD issue labels
  issues: write

# This allows a subsequently queued workflow run to interrupt/wait for previous runs
concurrency:
#  group: '${{ github.workflow }} @ ${{ github.event.issue.number || github.run_id }} :: ${{ github.event.action }}'
#  cancel-in-progress: true
  group: '${{ github.workflow }} @ ${{ github.event.issue.number || github.run_id }}'
  cancel-in-progress: false

jobs:

  labeler:
    name: Pushpin Labeler
    permissions:
      issues: write
    runs-on: ubuntu-latest
    steps:

      - name: Add pushpin label on pinning an issue
        if: github.event.action == 'pinned'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          repo:   ${{ github.repository }}
          number: ${{ github.event.issue.number }}
          labels: |
            ðŸ“Œ pinned

      - name: Remove pushpin label on unpinning an issue
        if: github.event.action == 'unpinned'
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          repo:   ${{ github.repository }}
          number: ${{ github.event.issue.number }}
          labels: |
            ðŸ“Œ pinned

      - name: GitHub reporter
        # run even previous steps fails
        if: always()
        run: |
          echo "$INPUT_SUMMARY"  >> $GITHUB_STEP_SUMMARY;
        env:
          INPUT_SUMMARY: ${{ format('Issue [\#{2}]({0}/{1}/issues/{2}) should be `{3}` now.',
                                    github.server_url, github.repository,
                                    github.event.issue.number,
                                    github.event.action) }}
